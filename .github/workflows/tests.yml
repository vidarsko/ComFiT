name: Run Python tests

on:
  push:
    branches:
      - 'main'
      - 'feature-plotly-integration'
    paths:
      - 'comfit/**.py'  # Trigger when any Python file in comfit directory is changed
      - 'tests/test_*.py'  # Trigger when any test file is changed
  pull_request:
    branches:
      - 'main'
    paths:
      - 'comfit/**.py' # Trigger when any Python file in comfit directory is changed
      - 'tests/test_*.py' # Trigger when any test file is changed

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Specify your Python version here

    - name: Install ffmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y --fix-missing ffmpeg

    - name: Install dependencies
      run: |
        pip install .

    - name: Install xvfb
      run: sudo apt-get install -y xvfb

    - name: Get changed files
      id: files
      uses: jitterbit/get-changed-files@v1

    - name: Run specific tests
      run: |
        FILES="${{ steps.files.outputs.all }}"
        echo "Changed files: $FILES"
        
        RUN_TEST_QUANTUM_MECHANICS=false
        RUN_TEST_BOSE_EINSTEIN_CONDENSATE=false
        RUN_TEST_PHASE_FIELD_CRYSTAL=false
        RUN_TEST_NEMATIC_LIQUID_CRYSTAL=false

        # Check for base_system.py changes and run all tests
        if echo "$FILES" | grep -qE "comfit/core/base_system(|_calc|_conf|_evolve|_get|_init|_plot).py"; then
          echo "Changes in base_system or its components detected. Running all tests."
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" python -m unittest discover tests/
          exit 0
        fi

        # Conditional execution for each specific file
        if echo "$FILES" | grep -q "comfit/models/quantum_mechanics.py"; then
          RUN_TEST_QUANTUM_MECHANICS=true
        fi
        if echo "$FILES" | grep -q "tests/test_quantum_mechanics.py"; then
          RUN_TEST_QUANTUM_MECHANICS=true
        fi

        if echo "$FILES" | grep -q "comfit/models/bose_einstein_condensate.py"; then
          RUN_TEST_BOSE_EINSTEIN_CONDENSATE=true
        fi
        if echo "$FILES" | grep -q "tests/test_bose_einstein_condensate.py"; then
          RUN_TEST_BOSE_EINSTEIN_CONDENSATE=true
        fi

        if echo "$FILES" | grep -qE "comfit/models/phase_field_crystal(|_1d_periodic|_2d_triangular|_2d_square|_3d_body_centered_cubic|_3d_face_centered_cubic|_3d_simple_cubic).py"; then
          RUN_TEST_PHASE_FIELD_CRYSTAL=true
        fi
        if echo "$FILES" | grep -q "tests/test_phase_field_crystal.py"; then
          RUN_TEST_PHASE_FIELD_CRYSTAL=true
        fi

        if echo "$FILES" | grep -q "comfit/models/nematic_liquid_crystal.py"; then
          RUN_TEST_NEMATIC_LIQUID_CRYSTAL=true
        fi
        if echo "$FILES" | grep -q "tests/test_nematic_liquid_crystal.py"; then
          RUN_TEST_NEMATIC_LIQUID_CRYSTAL=true
        fi

        if [ "$RUN_TEST_QUANTUM_MECHANICS" = true ] ; then
          echo "Running tests for quantum mechanics"
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" python -m unittest tests/test_quantum_mechanics.py
        fi

        if [ "$RUN_TEST_BOSE_EINSTEIN_CONDENSATE" = true ] ; then
          echo "Running tests for Bose-Einstein Condensate"
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" python -m unittest tests/test_bose_einstein_condensate.py
        fi

        if [ "$RUN_TEST_PHASE_FIELD_CRYSTAL" = true ] ; then
          echo "Running tests for Phase Field Crystal"
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" python -m unittest tests/test_phase_field_crystal.py
        fi

        if [ "$RUN_TEST_NEMATIC_LIQUID_CRYSTAL" = true ] ; then
          echo "Running tests for Nematic Liquid Crystal"
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" python -m unittest tests/test_nematic_liquid_crystal.py
        fi
        


